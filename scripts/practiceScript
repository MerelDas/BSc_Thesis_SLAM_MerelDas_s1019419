#!/bin/bash
#connect to X Server XLaunch to show view of the mapping in rviz
export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0
#source environment setup files to access ROS commands
source /home/mereldas/catkin_ws/devel/setup.bash
#point to directories where Gazebo will search for models
export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:/opt/ros/noetic/turtlebot3_simulations/turtlebot3_gazebo/models
#set which turtlebot model to use there's burger, waffle & waffle_pi
export TURTLEBOT3_MODEL=burger

#kill all processes with ^C
trap terminate SIGINT
terminate(){
    pkill -SIGINT -P $$
    exit
}

#specify which world (layout) to map
WORLDS="complicated_noGaps small_office quarter_maze triangle half_half weird_shapes cubicles simple_offices apartment half_square base_square half_half weird_shapes cubicles simple_offices just_blocks apartment small_office quarter_maze three_hallways triangle cafe blocks meeting_room complicated_noGaps office half_square base_square simple_maze circles
#the world name that is currently in the gazebo launch file
OLDWORLD="complicated_noGaps"
#stddevs for laser noise
DEVS="0\.0 0\.01 0\.03 0\.05 0\.1 0\.2"

for WORLDNAME in $WORLDS; do  #loop through worlds
  #replace name in launch file to launch right world
  sed -i -e "s/$OLDWORLD/$WORLDNAME/g" ~/catkin_ws/src/turtlebot3_simulations/turtlebot3_gazebo/launch/turtlebot3_empty_world.launch
  #stddev in  that is currently in the gazebo launch file
  OLDDEV="0\.01"
  for STDDEV in $DEVS; do     #loop through stddevs of gaussian noise laser
    #replace old value of stddev with new value in file of the right world
    OLDLINE="<stddev>$OLDDEV<\/stddev> <!--changehere-->"
    NEWLINE="<stddev>$STDDEV<\/stddev> <!--changehere-->"
    sed -i -e "s/$OLDLINE/$NEWLINE/g" ~/catkin_ws/src/turtlebot3_simulations/turtlebot3_gazebo/worlds/$WORLDNAME.world

    #launch gazebo
    timeout 10m roslaunch turtlebot3_gazebo turtlebot3_empty_world.launch & 
    sleep 5s
    #launch gmapping
    timeout 10m roslaunch turtlebot3_slam turtlebot3_slam.launch slam_methods:=gmapping &
    sleep 5s
    #alternately launch  exploring and random navigation behaviour
    timeout 10m roslaunch turtlebot3_navigation move_base.launch &
    sleep 5s
    #alternately launch  exploring (explore_lite) and random navigation (turtlebot3_gazebo) behaviour
    timeout 3m roslaunch explore_lite explore.launch &
    sleep 3m
    timeout 30s roslaunch turtlebot3_gazebo turtlebot3_simulation.launch &
    sleep 30s
    timeout 2m roslaunch explore_lite explore.launch &
    sleep 2m
    timeout 30s roslaunch turtlebot3_gazebo turtlebot3_simulation.launch &
    sleep 30s
    timeout 2m roslaunch explore_lite explore.launch &
    sleep 2m
    timeout 30s roslaunch turtlebot3_gazebo turtlebot3_simulation.launch &
    sleep 30s
    timeout 90s roslaunch explore_lite explore.launch &
    sleep 60s
    #save time
    TIMESTAMP=$(date +%s)
    #save map with unique name according to layout, stddev and timestamp
    MAPNAME=$WORLDNAME-$STDDEV-$TIMESTAMP
    rosrun map_server map_saver -f ~/maps/$MAPNAME
    wait

    #specify which world and stddev are now in launch and world file for next loop
    OLDWORLD=$WORLDNAME
    OLDDEV=$STDDEV
  done
done
